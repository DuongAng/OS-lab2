//// Created by duongang on 12/5/2024.//#include <iostream>#include "ArrayDedup.h"int main(int argc, char *argv[]) {  if (argc < 2) {    ArrayDedup::printHelp();    return 1;  }  std::string command = argv[1];  if (command == "dedup") {    if (argc != 5) {      std::cout << "Usage: program dedup <size> <min_value> <max_value>"<<std::endl;      return 1;    }    size_t size = std::stoull(argv[2]);    int min_value = std::stoi(argv[3]);    int max_value = std::stoi(argv[4]);    std::vector<int> random_array = ArrayDedup::generateRandomArray(size, min_value, max_value);    std::cout << "Random array: ";    for (int num : random_array) {      std::cout << num << " ";    }    std::cout << std::endl;    std::vector<int> uniqueArray = ArrayDedup::deduplicate(random_array);    std::cout << "Array after deduplicating: ";    for (int num : uniqueArray) {      std::cout << num << " ";    }  } else if (command == "help") {    ArrayDedup::printHelp();  }else if (command == "full-bench"){    if (argc != 6) {      std::cout << "Usage: program full-bench <size> <min_value> <max_value> <repeat_times>"<<std::endl;      return 1;    }    size_t size = std::stoull(argv[2]);    int min_value = std::stoi(argv[3]);    int max_value = std::stoi(argv[4]);    int repeat_times = std::stoi(argv[5]);    for (int i = 0; i < repeat_times; i++) {      std::vector<int> random_array = ArrayDedup::generateRandomArray(size, min_value, max_value);      std::cout << "Random array: ";      for (int num : random_array) {        std::cout << num << " ";      }      std::cout << std::endl;      std::vector<int> uniqueArray = ArrayDedup::deduplicate(random_array);      std::cout << "Array after deduplicating: ";      for (int num : uniqueArray) {        std::cout << num << " ";      }      std::cout<<"\n" << std::endl;    }  }else {    std::cout << "Unknown command: "<<command<< std::endl;    ArrayDedup::printHelp();    return 1;  }  return 0;}